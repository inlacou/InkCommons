plugins {
    id 'java-library'
    id 'maven-publish'
    id 'kotlin'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    compileOnly project(':InkKotlinCommons')
    testImplementation project(':InkKotlinCommons')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version"
    compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android_version"

    compileOnly "com.google.code.gson:gson:$gson_version"
    testImplementation "com.google.code.gson:gson:$gson_version"

    compileOnly "io.reactivex.rxjava3:rxjava:$rxjava_version"                                      //RX
    compileOnly "io.reactivex.rxjava3:rxkotlin:$rxkotlin_version"                                  	//RX
    testImplementation "io.reactivex.rxjava3:rxjava:$rxjava_version"                                      //RX
    testImplementation "io.reactivex.rxjava3:rxkotlin:$rxkotlin_version"                                  	//RX
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set("sources")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier.set("javadoc")
}

test {
    useJUnitPlatform()
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.github.inlacou.inkcommons'
                artifactId = 'InkKotlinExtensions'
                artifact(sourceJar)
                artifact(javadocJar)
                from components.java
            }
        }
    }
}

