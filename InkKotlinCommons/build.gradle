plugins {
    id 'java-library'
    id 'maven-publish'
    id 'kotlin'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    useJUnitPlatform()
}

dependencies {
    testImplementation project(':InkKotlinExtensions')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testImplementation "org.junit.jupiter:junit-jupiter:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.8.0"
    implementation "io.reactivex.rxjava3:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava3:rxkotlin:$rxkotlin_version"

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version")
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set("sources")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier.set("javadoc")
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.github.inlacou.inkcommons'
                artifactId = 'InkKotlinCommons'
                artifact(sourceJar)
                artifact(javadocJar)
                from components.java
            }
        }
    }
}
